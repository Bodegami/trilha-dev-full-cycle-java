COMANDOS BÁSICOS:

docker --version == imprime a versao do Docker instalada

docker ps == imprime os containers em execucao

docker ps -a == imprime todos os containers (em execucao e os parados)

docker run hello-world == baixa a imagem e cria um container com a imagem informada (hello-world)

docker run -i ubuntu bash == baixa a imagem do ubuntu, cria o container com a imagem e abre o terminal bash interativo

docker exec -it "nome_container" bash == acessa um container, integrando o terminal e abilitando a execucao de comandos

exit ou CTRL + D == sai de um container docker

docker start id_container/ nome_container == inicia um container parado

docker stop id_container/ nome_container == interrompe a execucao do container informado.

docker run -it --rm ubuntu:latest bash == baixa a imagem do ubuntu, cria o container com a imagem, abre o terminal bash interativo e exclui o container ao sair.

docker run -d -p 8080:80 nginx == baixa a imagem nginx, cria o container da imagem redirecionando a porta do container 8080 para a porta local 80 e sem travar o terminal.

docker stop id_container/ nome_container == interrompe a execucao do container informado.

docker rm id_container/ nome_container == exclui um container parado

docker rm id_container/ nome_container -f == força a exclusao de um container mesmo que em execucao

docker run --name meu-ubuntu ubuntu == baxa a imagem ubuntu, cria um container da imagem com o nome meu-ubuntu

docker exec id_container/ nome_container comando_bash == executa um comando informado no container informado



FLAGS:

-i == modo interativo, ele anexa o seu terminal com o do container de forma que é possível acessar o container

-t == TTY, permite digtar coisas no terminal

-it == modo interativo que anexa o terminal local com o do container e possibilita a digitação de comandos

-a == exibe instâncias, imagens e containers parados 

--rm == remove um processo, container, imagem, volume e etc

-p 8080:9000 == publica a porta 8080 do container para a minha porta local 9000 (redireciona de 8080 para 9000)

-d == executa o script e libera o terminal. É D de detached

-f == força a execucao de um processo

--name meu-container == atribui o nome informado ao container






TIPS:

- Alterando a pagina principal de container nginx
    - acessamos o container com terminal bash: docker exec -it id_container/ nome_container bash
    - atualizamos o cache do apt-get : apt-get update
    - instalamos o editor de textos vim: apt-get install vim
    - acessamos o diretorio do arquivo principal: cd /usr/share/nginx
    - executamos o editor de texto do arquivo index.html: vim index.html
    - abilitamos o modo edicao: pressionar tecla "i". final do terminal de aparecer INSERT indicando que o modo edicao está ativo
    - alteramos o arquivo: alteramos da forma que quisermos
    - saindo do modo edicao: pressionar a tecla ESC para sair do modo edicao. A palavra INSERT deve sumir do terminal
    - salvando o arquivo: pressionamos as teclas ":w" para salvar o arquivo. O W é de write
    - saindo do vim: pressionamos as teclas ":q" para sair do vim. O Q é de quit.